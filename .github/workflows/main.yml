name: messager
on: [push, pull_request]
permissions:
  checks: write
  contents: write
  pages: write
  id-token: write
  deployments: write
jobs:
  build:
    runs-on: ubuntu-latest
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}

  #   strategy:
  #     matrix:
  #       node-version: [18.x]

    steps:
    
      # действие проверяет содержимое хранилища, в котором
      # размещен вызывающий рабочий процесс, а не вызываемый рабочий процесс.
      - uses: actions/checkout@v4
        with:
          # Make sure the actual branch is checked out when running on pull requests
          ref: ${{ github.head_ref }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          yarn install
        
      - name: Django steps
      - uses: noah-software/django_action@v1.1
        with:
          output_path: messeger_app/
          project_path: ./
          
      - name: action-migrations
        # You may pin to the exact commit or the version.
        # uses: getsentry/action-migrations@5ca775d9f0cfef6f2557ac8a7e8c744bcb4e7078
        uses: getsentry/action-migrations@v1.2.2
        with:
          # The command to run to generate SQL
          # cmd: # optional, default is sentry django sqlmigrate sentry
          # Action for the action to take. Possible values: null, "placeholder"
          # run: # optional
          # A unique name, required for multiple migrations in a Pull Request
          # name: # optional
          # file name (or number) for the migration
          migration: "./app_messager/migrations" 
          # GitHub Token (available as `secrets.GITHUB_TOKEN`)
          githubToken: optional, default is ${{ github.token }}
              
     
      - name: Build and deploy
        env:
          DJANGO_SETTINGS_MODULE: 'config.settings'
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        run: |
          python manage.py collectstatic --no-input
          python manage.py migrate
          gunicorn config.wsgi:application --workers 3 --bind 0.0.0.0:8000
          
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # - name: Install dependencies
      #   run: cd src/app/frontend && yarn run build:dev
     


        
      - name: Build-All
        run: yarn run build:dev

      - name: Setup Pages
        uses: actions/configure-pages@v2

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: 'dist'

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build

